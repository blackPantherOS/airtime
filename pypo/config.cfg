############################################
# pypo - configuration                     #
############################################

# Set the type of client you are using.
# Currently supported types:
# 1) "obp" = Open Broadcast Platform
# 2) "campcaster"
#
api_client = "campcaster"

############################################
# Directories / Hosts                      #
# _include_ trailing slash !!              #
############################################
cache_dir = '/opt/pypo/cache/'
file_dir = '/opt/pypo/files/' 
tmp_dir = '/opt/pypo/tmp/'

# Hostname
base_url = 'http://localhost/'

############################################
# Liquidsoap settings                      #
############################################
ls_host = '127.0.0.1'
ls_port = '1234'

############################################
# pypo preferences                         #
############################################
prepare_ahead = 24 #in hours
cache_for = 24 #how long to hold the cache, in hours

# Poll interval in seconds.
#
# This is how often the poll script downloads new schedules and files from the
# server.
#
# For production use, this number depends on whether you plan on making any
# last-minute changes to your schedule.  This number should be set to half of
# the time you expect to "lock-in" your schedule.  So if your schedule is set
# 24 hours in advance, this can be set to poll every 12 hours.
#
poll_interval = 10 # in seconds.


# Push interval in seconds.
#
# This is how often the push script checks whether it has something new to
# push to liquidsoap.
#
# It's hard to imagine a situation where this should be more than 1 second.
#
push_interval = 1 # in seconds

# 'pre' or 'otf'. 'pre' cues while playlist preparation
# while 'otf' (on the fly) cues while loading into ls  
# (needs the post_processor patch)
cue_style = 'pre'


################################################################################
# Uncomment *one of the sets* of values from the API clients below, and comment
# out all the others.
################################################################################

#####################
# Campcaster Config #
#####################
# Value needed to access the API
api_key = 'AAA'

# Path to the base of the API
api_base = 'api/'

# URL to get the version number of the server API
version_url = 'version/api_key/%%api_key%%'

# Schedule export path.
# %%from%% - starting date/time in the form YYYY-MM-DD-hh-mm
# %%to%% - starting date/time in the form YYYY-MM-DD-hh-mm
export_url = 'schedule/api_key/%%api_key%%/from/%%from%%/to/%%to%%' 

# Update whether a schedule group has begun playing.
update_item_url = 'notifyScheduleGroupPlay/api_key/%%api_key%%/schedule_id/%%schedule_id%%'

# Update whether an audio clip is currently playing.
update_start_playing_url = 'notifyMediaItemStartPlay/api_key/%%api_key%%/media_id/%%media_id%%/schedule_id/%%schedule_id%%'

# ???
generate_range_url = 'generate_range_dp.php'


##############
# OBP config #
##############
# Value needed to access the API
#api_key = 'AAA'

#base_url = 'http://localhost/'

# Path to the base of the API
#api_base = ''

# URL to get the version number of the server API
#version_url = 'api/pypo/status/json'

# Schedule export path.
# %%from%% - starting date/time in the form YYYY-MM-DD-hh-mm
# %%to%% - starting date/time in the form YYYY-MM-DD-hh-mm

# Update whether an item has been played.
#update_item_url = 'api/pypo/update_shedueled_item/$$item_id%%?played=%%played%%' 

# Update whether an item is currently playing.
#update_start_playing_url = 'api/pypo/mod/medialibrary/?playlist_type=%%playlist_type%%&export_source=%%export_source%%&media_id=%%media_id%%&playlist_id=%%playlist_id%%&transmission_id=%%transmission_id%%'

# ???
#generate_range_url = 'api/pypo/generate_range_dp/'

